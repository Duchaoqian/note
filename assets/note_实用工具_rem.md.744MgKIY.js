import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.CgAj5nG9.js";const o=JSON.parse('{"title":"rem适配","description":"","frontmatter":{},"headers":[],"relativePath":"note/实用工具/rem.md","filePath":"note/实用工具/rem.md","lastUpdated":null}'),l={name:"note/实用工具/rem.md"};function p(t,s,h,k,r,B){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="rem适配" tabindex="-1">rem适配 <a class="header-anchor" href="#rem适配" aria-label="Permalink to &quot;rem适配&quot;">​</a></h1><h3 id="安装-lib-flexible-根据屏幕尺寸设置-根标签字体大小" tabindex="-1">安装 lib-flexible 根据屏幕尺寸设置 根标签字体大小 <a class="header-anchor" href="#安装-lib-flexible-根据屏幕尺寸设置-根标签字体大小" aria-label="Permalink to &quot;安装 lib-flexible 根据屏幕尺寸设置 根标签字体大小&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span>npm install lib-flexible</span></span></code></pre></div><h3 id="安装-autoprefixer-兼容浏览器-添加前缀" tabindex="-1">安装 autoprefixer 兼容浏览器，添加前缀 <a class="header-anchor" href="#安装-autoprefixer-兼容浏览器-添加前缀" aria-label="Permalink to &quot;安装 autoprefixer 兼容浏览器，添加前缀&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span>npm install autoprefixer</span></span></code></pre></div><h3 id="安装-postcss-pxtorem-用于将-css-中的-px-转化为-rem" tabindex="-1">安装 postcss-pxtorem 用于将 css 中的 px 转化为 rem <a class="header-anchor" href="#安装-postcss-pxtorem-用于将-css-中的-px-转化为-rem" aria-label="Permalink to &quot;安装 postcss-pxtorem 用于将 css 中的 px 转化为 rem&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span>npm install postcss-pxtorem</span></span></code></pre></div><h3 id="新建-postcss-config-js-书写一下配置" tabindex="-1">新建 postcss.config.js 书写一下配置 <a class="header-anchor" href="#新建-postcss-config-js-书写一下配置" aria-label="Permalink to &quot;新建 postcss.config.js 书写一下配置&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  plugins</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">    // 兼容浏览器，添加前缀</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    autoprefixer</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {}</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">    &#39;postcss-pxtorem&#39;</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      rootValue</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 37.5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> //结果为：设计稿元素尺寸/16，比如元素宽320px,最终页面会换算成 20rem</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      propList</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;*&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">]</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> //是一个存储哪些将被转换的属性列表，这里设置为[&#39;*&#39;]全部，假设需要仅对边框进行设置，可以写[&#39;*&#39;, &#39;!border*&#39;]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      unitPrecision</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> //保留rem小数点多少位</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      selectorBlackList</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;.radius&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">]</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> //则是一个对css选择器进行过滤的数组，比如你设置为[&#39;fs&#39;]，那例如fs-xl类名，里面有关px的样式将不被转换，这里也支持正则写法。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      mediaQuery</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> //媒体查询( @media screen 之类的)中不生效</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      minPixelValue</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 12</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> //px小于12的不会被转换</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span></code></pre></div>`,9)]))}const F=i(l,[["render",p]]);export{o as __pageData,F as default};
