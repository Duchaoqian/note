import{_ as i,c as a,o as n,ag as h}from"./chunks/framework.CgAj5nG9.js";const B=JSON.parse('{"title":"泛型","description":"","frontmatter":{},"headers":[],"relativePath":"note/TypeScript/06-ts泛型.md","filePath":"note/TypeScript/06-ts泛型.md","lastUpdated":1751877942000}'),t={name:"note/TypeScript/06-ts泛型.md"};function l(k,s,p,e,F,r){return n(),a("div",null,s[0]||(s[0]=[h(`<h1 id="泛型" tabindex="-1">泛型 <a class="header-anchor" href="#泛型" aria-label="Permalink to &quot;泛型&quot;">​</a></h1><p>泛型：Generics，是指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定类型的一种特性 也就是说，泛型是允许同一个函数接受不同类型参数的一种模版，与any相比，使用泛型来创建可服用的组件要更好，因为泛型会保留参数类型（PS：泛型是整个TS的重点，也是难点，请多多注意～）</p><h2 id="泛型语法" tabindex="-1">泛型语法 <a class="header-anchor" href="#泛型语法" aria-label="Permalink to &quot;泛型语法&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> fun&lt;T&gt;(data</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> T[])</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> T[] {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.sort()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> data </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> fun&lt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;([</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;113&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">])</span></span></code></pre></div><h2 id="多类型泛型" tabindex="-1">多类型泛型 <a class="header-anchor" href="#多类型泛型" aria-label="Permalink to &quot;多类型泛型&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> fun&lt;T</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> A&gt;(data</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (T </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> A)[])</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (T </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> A)[] {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.sort()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> data </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> fun&lt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;([</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;113&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 123</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">])</span></span></code></pre></div><h2 id="泛型类型别名" tabindex="-1">泛型类型别名 <a class="header-anchor" href="#泛型类型别名" aria-label="Permalink to &quot;泛型类型别名&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Info&lt;T&gt; </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> T</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> T</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> user</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Info&lt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt; </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;zs&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 20</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span></code></pre></div><h2 id="泛型接口" tabindex="-1">泛型接口 <a class="header-anchor" href="#泛型接口" aria-label="Permalink to &quot;泛型接口&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Info&lt;T&gt; {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> T</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> user</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Info&lt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt; </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> { username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;123&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> user1</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Info&lt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt; </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> { username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 123</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> } </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">//error</span></span></code></pre></div><h2 id="泛型类" tabindex="-1">泛型类 <a class="header-anchor" href="#泛型类" aria-label="Permalink to &quot;泛型类&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person&lt;T&gt; {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> T</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">(username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> T) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> username</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  getName()</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> T {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> user </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person&lt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;zs&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span></span></code></pre></div><h2 id="泛型默认参数" tabindex="-1">泛型默认参数 <a class="header-anchor" href="#泛型默认参数" aria-label="Permalink to &quot;泛型默认参数&quot;">​</a></h2><p>所谓默认参数，是指定类型，如默认值一样，从实际值参数中也无法推断出类型时，这个默认类型就会起作用。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> fun&lt;T </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;(data</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> T[])</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> T[] {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.sort()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> data </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> fun&lt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;([</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;113&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">])</span></span></code></pre></div><h2 id="泛型常用字母" tabindex="-1">泛型常用字母 <a class="header-anchor" href="#泛型常用字母" aria-label="Permalink to &quot;泛型常用字母&quot;">​</a></h2><ul><li>T：代表Type，定义泛型时通常用作第一个类型变量名称</li><li>K：代表Key，表示对象中的键类型；</li><li>V：代表Value，表示对象中的值类型；</li><li>E：代表Element，表示的元素类型；</li></ul>`,17)]))}const g=i(t,[["render",l]]);export{B as __pageData,g as default};
