import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.CgAj5nG9.js";const d=JSON.parse('{"title":"multer 文件上传系统在express中的使用","description":"","frontmatter":{},"headers":[],"relativePath":"note/nodejs/multer文件上传.md","filePath":"note/nodejs/multer文件上传.md","lastUpdated":null}'),h={name:"note/nodejs/multer文件上传.md"};function t(k,s,p,e,B,F){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="multer-文件上传系统在express中的使用" tabindex="-1">multer 文件上传系统在express中的使用 <a class="header-anchor" href="#multer-文件上传系统在express中的使用" aria-label="Permalink to &quot;multer 文件上传系统在express中的使用&quot;">​</a></h1><ul><li>Multer 是一个node.js中间件，用于处理 multipart/form-data类型的表单数据，主要用于上传文件。</li><li>在form表单上要加上 enctype=“multipart/form-data” 的属性。</li><li>Multer 不会处理任何非 multipart/form-data 类型的表单数据。</li></ul><h2 id="_1-安装multer" tabindex="-1">1. 安装multer <a class="header-anchor" href="#_1-安装multer" aria-label="Permalink to &quot;1. 安装multer&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">npm </span><span style="--shiki-light:#9DB1C5;--shiki-dark:#9DB1C5;">install</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#9DB1C5;"> multer</span></span></code></pre></div><h2 id="_2-基础使用" tabindex="-1">2. 基础使用 <a class="header-anchor" href="#_2-基础使用" aria-label="Permalink to &quot;2. 基础使用&quot;">​</a></h2><p>服务端代码</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 导入multer 文件上传系统模块</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> multer</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">require(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;multer&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 文件上传系统配置</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> upload</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> multer({</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  dest</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &quot;public/images&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 指定上传文件地址</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">app</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.post(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;/upload/single&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> upload</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.single(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;img&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (req</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> res) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">req</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.file)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">req</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.file) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">      res</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.send(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;文件上传成功&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    } </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">      res</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.send(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;上传失败&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    </span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">})</span></span></code></pre></div><p>客户端代码</p><ul><li>form 表单上传文件</li></ul><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">&lt;!--在form表单上要加上 enctype=“multipart/form-data” 的属性--&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">form</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> action</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;/upload&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> method</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;post&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> enctype</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;multipart/form-data&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">label</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> for</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    图片上传</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">    &lt;!--accept 用于指定上传文件类型 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">input</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;file&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> accept</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;image/png,image/jpg,text/html&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;img&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  &lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">label</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">br</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">input</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;submit&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;上传&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">form</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;</span></span></code></pre></div><ul><li>ajax 上传文件</li></ul><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">&lt;!--在form表单上要加上 enctype=“multipart/form-data” 的属性--&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">form</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> action</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;/upload&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> method</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;post&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> enctype</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;multipart/form-data&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">label</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> for</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    图片上传</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">    &lt;!--accept 用于指定上传文件类型 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">input</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;file&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> accept</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;image/png,image/jpg,text/html&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;img&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  &lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">label</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">br</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">input</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;submit&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;上传&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">form</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">script</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> form </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.querySelector(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;form&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    form</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.onsubmit </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (e) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        e</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.preventDefault();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">        // 使用 formData 数据格式上传文件</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">        // 构造函数生成的结果就是 multipart/form-data 格式的数据</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">        // 不仅能包含文件信息，也能包含普通的文本信息</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">        // 并且收集提交数据时也非常的方便</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> data </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> FormData(form);</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">        // 只需要将用于收集用户信息的表单标签作为 FormData 的参数即可。</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">        // 他只会收集包含有 name 属性的 input 标签的值</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">        // 也可以使用自带的方法去完善要提交的数据，比如 额外的添加，去除不必要的数据</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        data</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.append(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;title&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;这是一个头像&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> xhr </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> XMLHttpRequest();</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        xhr</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.open(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;POST&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;/upload&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        xhr</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.responseType </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;json&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        xhr</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.send(data);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        xhr</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.onreadystatechange </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> () {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">xhr</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.readyState </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 4</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">                console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;上传成功&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">                ...</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">            }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">script</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">&gt;</span></span></code></pre></div><h2 id="_3-multer-options-配置项" tabindex="-1">3. multer(options) 配置项 <a class="header-anchor" href="#_3-multer-options-配置项" aria-label="Permalink to &quot;3. multer(options) 配置项&quot;">​</a></h2><p>Multer 接受一个 options 对象，其中最基本的是 dest 属性，这将告诉 Multer 将上传文件保存在哪。如果省略 options 对象，这些文件将保存在内存中，永远不会写入磁盘，options 配置如下：</p><table tabindex="0"><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>dest or storage</td><td>在哪里存储文件</td></tr><tr><td>limits</td><td>限制上传数据的大小</td></tr><tr><td>fileFilter</td><td>文件过滤器，控制哪些文件可以被接受</td></tr><tr><td>preservePath</td><td>保存包含文件名的完整文件路径</td></tr></tbody></table><h3 id="_3-1-dest" tabindex="-1">3.1 dest <a class="header-anchor" href="#_3-1-dest" aria-label="Permalink to &quot;3.1 dest&quot;">​</a></h3><p>指定上传文件的存储路径。文件名默认为随机字符</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> upload</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> multer({</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    dest</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;/public/images&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">})</span></span></code></pre></div><h3 id="_3-2-storage-存储引擎" tabindex="-1">3.2 storage 存储引擎 <a class="header-anchor" href="#_3-2-storage-存储引擎" aria-label="Permalink to &quot;3.2 storage 存储引擎&quot;">​</a></h3><p><em><strong>DiskStorage 磁盘存储引擎</strong></em></p><p>磁盘存储引擎可以让你控制文件的存储。有两个属性</p><ul><li>destination，指定文件存储的路径；</li></ul><p>destination 是用来确定上传的文件应该存储在哪个文件夹中。也可以提供一个 string (例如 &#39;/tmp/uploads&#39;)。如果没有设置 destination，则使用操作系统默认的临时文件夹。</p><p><strong>注意: 如果你提供的 destination 是一个函数，你需要负责创建文件夹。当提供一个字符串，multer 将确保这个文件夹是你创建的。</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 指定文件存储路径</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> filePath </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> path</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.join(__dirname</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &quot;../public/img&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 生成storage 对象</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> storage </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> multer</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.diskStorage({</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  destination</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> filePath</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 可以指定属性</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> storage </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> multer</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.diskStorage({</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">    // 函数的形式</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  destination</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (req</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> file</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> cb) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">      // 函数接收三个参数</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">      // req 请求报文</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">      // file 上传的文件属性对象</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">      // cb 回调函数</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">      // 回调函数参数信息</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">      // cb(错误信息,文件存储路径信息)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      cb(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> filePath)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 将生成的storage 对象传递给multer方法</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> upload</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">multer({storage});</span></span></code></pre></div><ul><li>filename，指定文件的存储名称。</li></ul><p>filename 用于确定文件夹中的文件名的确定。 如果没有设置 filename，每个文件将设置为一个随机文件名，并且是没有扩展名的。</p><p><strong>注意: Multer 不会为你添加任何扩展名，你的程序应该返回一个完整的文件名。</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> multer</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">require(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;multer&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> path</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">require(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;path&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">//获取绝对路径</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> filePath </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> path</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.join(__dirname</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &quot;../public/img&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> storage </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> multer</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.diskStorage({</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  destination</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> filePath</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  filename</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (req</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> file</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> cb) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">     // 函数接收三个参数</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">     // req 请求报文</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">     // file 上传的文件属性对象</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">     // cb 回调函数</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">     // 回调函数参数信息</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">     // cb(错误信息,文件存储路径信息)</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">     // 获取文件的后缀名</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">     var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> ext </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> path</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.extname(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">file</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.originalname);</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">     // 指定文件名及后缀</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">     cb(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> Math</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.floor(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">Math</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.random() </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 90000</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 10000</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> +new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Date() </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> ext);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">   }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> upload</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">multer({storage});</span></span></code></pre></div><p>每个函数都传递了请求对象 (req) 和一些关于这个文件的信息 (file)，有助于你的决定。</p><p><strong>注意 req.body 可能还没有完全填充，这取决于向客户端发送字段和文件到服务器的顺序。</strong></p><h3 id="_3-3-limits" tabindex="-1">3.3 limits <a class="header-anchor" href="#_3-3-limits" aria-label="Permalink to &quot;3.3 limits&quot;">​</a></h3><p>用来指定一些数据大小的限制，设置 limits 可以帮助保护你的站点抵御拒绝服务 (DoS) 攻击。</p><table tabindex="0"><thead><tr><th>属性</th><th>值类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>files</td><td>Number</td><td>无限</td><td>在 multipart 表单中，上传文件的最大数量</td></tr><tr><td>fileSize</td><td>Number</td><td>无限</td><td>上传时，每一个文件最大长度 (单位：bytes)</td></tr><tr><td>fields</td><td>Number</td><td>无限</td><td>非文件 field 的最大数量（提交表单时，可以提交非文件的字段的数量）</td></tr><tr><td>fieldNameSize</td><td>Number</td><td>100 bytes</td><td>上传时，每一个 field 名字的最大长度</td></tr><tr><td>fieldSize</td><td>Number</td><td>1048576 bytes，即1MB</td><td>上传时，每一个 field 的最大长度</td></tr><tr><td>parts</td><td>Number</td><td>无限</td><td>在 multipart 表单中，part 传输的最大数量(fields + files)</td></tr><tr><td>headerPairs</td><td>Number</td><td>2000</td><td>在 multipart 表单中，键值对最大组数</td></tr></tbody></table><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> multer</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> require(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;multer&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> upload </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> multer({</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">        ...</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        limits:{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        	files</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;">2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> //最多上传2个文件</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">            fileSize</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;">5120</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> //设置单个文件最大为 5kb</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    });</span></span></code></pre></div><h3 id="_3-4-filefilter" tabindex="-1">3.4 fileFilter <a class="header-anchor" href="#_3-4-filefilter" aria-label="Permalink to &quot;3.4 fileFilter&quot;">​</a></h3><p>fileFilter 为一个函数，用来控制什么文件可以上传以及什么文件应该跳过。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> multer</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> require(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;multer&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> upload </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> multer({</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">        ...</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        fileFilter:</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">(req</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">cb){</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">            //通过调用回调函数,用boolean值来指示是否应接受该文件</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">            // cb(null, false);//不接收</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">            // cb(null, true);//接收</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">             </span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">            var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> reg </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> /</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">image\\/.</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">*$</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">/</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">            // 只接受 图片 格式的文件</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">reg</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.test(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">file</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.mimetype)) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">              cb(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">            } </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">              cb(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">            }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    });</span></span></code></pre></div><h2 id="_4-api-方法" tabindex="-1">4. api 方法 <a class="header-anchor" href="#_4-api-方法" aria-label="Permalink to &quot;4. api 方法&quot;">​</a></h2><h3 id="_4-1-single" tabindex="-1">4.1 single <a class="header-anchor" href="#_4-1-single" aria-label="Permalink to &quot;4.1 single&quot;">​</a></h3><p>接受一个名称为fieldname的文件。单个文件将存储在req.file中。</p><p>single有一个参数</p><ol><li>表单name属性值</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> multer</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> require(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;multer&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> upload </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> multer({</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    dest</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;/image&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">})</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">app</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.post(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;/profile&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> upload</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.single(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;img&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (req</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> res</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> next) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">  // req.file 是上传成功文件的信息对象</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">  // req.body 上传文件时所携带的其他文本表单数据</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">})</span></span></code></pre></div><h3 id="_4-2-array" tabindex="-1">4.2 array <a class="header-anchor" href="#_4-2-array" aria-label="Permalink to &quot;4.2 array&quot;">​</a></h3><p>接受一个文件名都为fieldname的文件数组。如果上传的文件超过maxCount，可选地出错。文件数组将存储在req.files中。</p><p>array有两个参数</p><ol><li>表单name属性值</li><li>最多上传文件的个数</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> multer</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> require(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;multer&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> upload </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> multer({</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    dest</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;/image&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">})</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">app</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.post(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;/profile&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> upload</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.array(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;img&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;">5</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (req</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> res</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> next) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">  // req.files 包含所有上传文件的信息对象</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">  // req.body 上传文件时所携带的其他文本表单数据</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">})</span></span></code></pre></div><h3 id="_4-3-fields" tabindex="-1">4.3 fields <a class="header-anchor" href="#_4-3-fields" aria-label="Permalink to &quot;4.3 fields&quot;">​</a></h3><p>接受指定 fields 的混合文件。这些文件的信息保存在 req.files。 fields 应该是一个对象数组，应该具有 name 和可选的 maxCount 属性。</p><p>single有两个参数</p><ol><li>表单name属性值</li><li>最多上传文件的个数</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> multer</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> require(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;multer&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> upload </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> multer({</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    dest</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&quot;/image&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">})</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">app</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.post(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;/profile&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> upload</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.fields([{ name</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;avatar&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> maxCount</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 1</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> { name</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;gallery&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> maxCount</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 8</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> }])</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (req</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> res</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> next) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">  // req.files 包含所有上传文件的信息对象</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">  // req.body 上传文件时所携带的其他文本表单数据</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">})</span></span></code></pre></div><h3 id="_4-4-none" tabindex="-1">4.4 none <a class="header-anchor" href="#_4-4-none" aria-label="Permalink to &quot;4.4 none&quot;">​</a></h3><p>只接受文本字段。如果上传任何文件，将发出代码为“LIMIT_UNEXPECTED_FILE”的错误。</p><h3 id="_4-5-any" tabindex="-1">4.5 any <a class="header-anchor" href="#_4-5-any" aria-label="Permalink to &quot;4.5 any&quot;">​</a></h3><p>接受通过网络传输的所有文件。文件数组将存储在req.files中。</p><p><strong>警告</strong>:确保您总是处理用户上传的文件。永远不要添加multer作为全局中间件，因为恶意用户可能会将文件上传到你没有预料到的路由。只在处理上传文件的路由上使用这个函数。</p>`,59)]))}const g=i(h,[["render",t]]);export{d as __pageData,g as default};
