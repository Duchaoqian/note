import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.CgAj5nG9.js";const d=JSON.parse('{"title":"数据劫持和数据代理","description":"","frontmatter":{},"headers":[],"relativePath":"note/vue/05-数据劫持和数据代理.md","filePath":"note/vue/05-数据劫持和数据代理.md","lastUpdated":1751877942000}'),p={name:"note/vue/05-数据劫持和数据代理.md"};function h(B,s,k,t,e,F){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="数据劫持和数据代理" tabindex="-1">数据劫持和数据代理 <a class="header-anchor" href="#数据劫持和数据代理" aria-label="Permalink to &quot;数据劫持和数据代理&quot;">​</a></h1><h2 id="数据劫持-defineproperty" tabindex="-1">数据劫持 defineProperty <a class="header-anchor" href="#数据劫持-defineproperty" aria-label="Permalink to &quot;数据劫持 defineProperty&quot;">​</a></h2><ol><li>属性介绍 <ol><li>enumerable: true <ol><li>用来指定属性 是否可以被枚举</li><li>枚举 通过遍历能够拿到数据</li></ol></li><li>writable: true <ul><li>用来决定属性值是否可以被修改</li></ul></li><li>configurable:true, <ul><li>用来决定属性值是否可以被删除</li></ul></li></ol></li><li>写法：<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">   Object</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.defineProperty(obj</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;hobby&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      value</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;打篮球&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">      // enumerable: true,</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">      // writable: true,</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">      // configurable:true,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      get() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">         console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;你正在尝试获取数据&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">         return</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> hob</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      set(value) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">         console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;你正在尝试修改数据&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> value)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">         hob </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> value</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">   })</span></span></code></pre></div></li><li>取对象的键 <blockquote><p>Object.keys(&quot;取键名的对象“)</p></blockquote></li></ol><h2 id="proxy-数据代理" tabindex="-1">proxy 数据代理 <a class="header-anchor" href="#proxy-数据代理" aria-label="Permalink to &quot;proxy 数据代理&quot;">​</a></h2><ol><li><p>vue3 原理 新的语法 proxy</p></li><li><p>通过代理把数据拿到</p></li><li><p>get 方法 需要两个参数</p><ol><li>target: 目标</li><li>prop: 目标中的属性</li></ol></li><li><p>set 方法接收三个参数</p><ol><li>target:目标对象</li><li>prop: 目标对象中的属性</li><li>value: 修改的数据</li></ol></li><li><p>写法：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">   var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> data </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;zs&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;20&#39;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">   }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">   var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> vm </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Proxy(data</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      get(target</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> prop) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">         console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;target:&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> target)</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">         console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;prop:&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> prop)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">         return</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> target[prop]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      set(target</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> prop</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> value) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">         console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;target:&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> target)</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">         console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;prop:&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> prop)</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">         console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;value:&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> value)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">         target[prop] </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> value</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">   })</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">   console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(vm)</span></span></code></pre></div></li><li><p>练习</p><ol><li><blockquote><p>console.log(obj.num, obj.num, obj.num) // 1, 2, 3</p></blockquote></li><li><p>思路：</p><ol><li>每次获取的值是不一样的</li><li>在获取本次数据的时候需要把下一次的数据修改一下</li></ol></li><li><p>写法：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">   var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> object </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      num</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 1</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">   }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">   var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> obj </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Proxy(object</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      get(target</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> prop) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">         return</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> target[prop]</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">++</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">   })</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">   console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">obj</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.num</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> obj</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.num</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> obj</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.num) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 1,2,3</span></span></code></pre></div></li></ol></li></ol>`,5)]))}const g=i(p,[["render",h]]);export{d as __pageData,g as default};
