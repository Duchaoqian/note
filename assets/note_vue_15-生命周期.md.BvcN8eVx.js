import{_ as e,c as i,o,ag as t}from"./chunks/framework.CgAj5nG9.js";const a="/assets/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.MuZLBFAS.png",h=JSON.parse('{"title":"生命周期","description":"","frontmatter":{},"headers":[],"relativePath":"note/vue/15-生命周期.md","filePath":"note/vue/15-生命周期.md","lastUpdated":1751877942000}'),r={name:"note/vue/15-生命周期.md"};function d(n,l,s,u,_,m){return o(),i("div",null,l[0]||(l[0]=[t('<h1 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h1><h2 id="生命周期图" tabindex="-1">生命周期图 <a class="header-anchor" href="#生命周期图" aria-label="Permalink to &quot;生命周期图&quot;">​</a></h2><img src="'+a+'" style="width:100%;"><h2 id="生命周期钩子函数" tabindex="-1">生命周期钩子函数 <a class="header-anchor" href="#生命周期钩子函数" aria-label="Permalink to &quot;生命周期钩子函数&quot;">​</a></h2><ol><li>生命周期 一个物品从出生到灭完的全部过程</li><li>vue 生命周期 就是从 vue 被创建到 vue 被销毁的全部过程</li><li>生命周期函数(生命周期钩子函数) 让你决定在 vue 生命周期的每个阶段该做什么事情</li><li>钩子函数 <ol><li>钩子函数写在 vue option 配置 项中</li><li>这个钩子函数不需要你去调用 由 vue 内部调用</li><li>八大钩子函数 <ol><li>beforeCreate <ol><li>beforeCreate 生命周期的第一个函数</li><li>这个阶段我们将无法获取到 data 中的数据 methods 中的方法</li></ol></li><li>created <ol><li>created 生命周期的第二个函数</li><li>vm 被创建完成 数据已经更新</li><li>这个阶段我们将可以获取到 data 中的数据 methods 中的方法</li><li>this.$el 真实的标签元素 标签模板还没有被生成</li></ol></li><li>beforeMount <ol><li>beforeMount 生命周期的第三个函数</li><li>这个阶段我们将可以获取到 data 中的数据 methods 中的方法 虚拟 dom 元素 但是这个阶段虚拟的 dom 元素，还没有被渲染到页面</li><li>this.$el null</li></ol></li><li>mounted <ol><li>mounted 生命周期的第四个函数</li><li>虚拟 dom 已将渲染到页面中 可以获取到标签</li></ol></li><li>beforeUpdate <ol><li>beforeUpdate 更新周期的第一个钩子函数</li><li>可以获取到更新的数据 页面还没有完成渲染</li><li>数据已经更新了 但是还每来的及渲染到页面中</li></ol></li><li>updated <ol><li>updated 更新周期的第二个钩子函数</li><li>在这个阶段可以获取到更新后的数据 并且页面也完成了渲染</li></ol></li><li>beforeUnmount <ol><li>beforeUnmount vue 实例被卸载之前的一个函数</li><li>例如：清除定时器</li></ol></li><li>unmounted <ol><li>unmounted 卸载完成时调用</li></ol></li></ol></li></ol></li></ol>',5)]))}const f=e(r,[["render",d]]);export{h as __pageData,f as default};
