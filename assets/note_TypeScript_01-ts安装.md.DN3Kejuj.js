import{_ as a,c as i,o as t,ag as e}from"./chunks/framework.CgAj5nG9.js";const c=JSON.parse('{"title":"ts 安装","description":"","frontmatter":{},"headers":[],"relativePath":"note/TypeScript/01-ts安装.md","filePath":"note/TypeScript/01-ts安装.md","lastUpdated":1751877942000}'),n={name:"note/TypeScript/01-ts安装.md"};function l(p,s,h,k,d,r){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="ts-安装" tabindex="-1">ts 安装 <a class="header-anchor" href="#ts-安装" aria-label="Permalink to &quot;ts 安装&quot;">​</a></h1><h2 id="_1-执行安装命令" tabindex="-1">1. 执行安装命令 <a class="header-anchor" href="#_1-执行安装命令" aria-label="Permalink to &quot;1. 执行安装命令&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">$ npm install </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">g typescript</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 或</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">$ yarn global add typescript</span></span></code></pre></div><h2 id="_2-查看版本号" tabindex="-1">2. 查看版本号 <a class="header-anchor" href="#_2-查看版本号" aria-label="Permalink to &quot;2. 查看版本号&quot;">​</a></h2><p>安装完成后我们可以使用 tsc 命令来执行 TypeScript 的相关代码，以下是查看版本号：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">$ tsc </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">v</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Version </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;">4.3</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;">5</span></span></code></pre></div><h2 id="_3-创建ts文件" tabindex="-1">3. 创建ts文件 <a class="header-anchor" href="#_3-创建ts文件" aria-label="Permalink to &quot;3. 创建ts文件&quot;">​</a></h2><p>通常我们使用 .ts 作为 TypeScript 代码文件的扩展名。 新建一个 index.ts 文件 书写以下代码</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> msg</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &quot;Hello World&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> </span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(msg)</span></span></code></pre></div><h2 id="_4-编译ts文件" tabindex="-1">4. 编译ts文件 <a class="header-anchor" href="#_4-编译ts文件" aria-label="Permalink to &quot;4. 编译ts文件&quot;">​</a></h2><p>执行以下命令将 TypeScript 转换为 JavaScript 代码：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">tsc </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">index</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.ts</span></span></code></pre></div><p>这时候在当前目录下（与 index.ts 同一目录）就会生成一个 index.js 文件，代码如下</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> msg </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &quot;Hello World&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> </span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(msg)</span></span></code></pre></div><h2 id="_4-运行" tabindex="-1">4. 运行 <a class="header-anchor" href="#_4-运行" aria-label="Permalink to &quot;4. 运行&quot;">​</a></h2><h3 id="_1-运行-编译后的js-文件" tabindex="-1">1. 运行 编译后的js 文件 <a class="header-anchor" href="#_1-运行-编译后的js-文件" aria-label="Permalink to &quot;1. 运行 编译后的js 文件&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">node </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">index</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.js</span></span></code></pre></div><h3 id="_2-直接运行ts-文件" tabindex="-1">2. 直接运行ts 文件 <a class="header-anchor" href="#_2-直接运行ts-文件" aria-label="Permalink to &quot;2. 直接运行ts 文件&quot;">​</a></h3><ol><li>下载ts 执行工具</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">npm i ts</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">node </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">g</span></span></code></pre></div><ol start="2"><li>执行运行命令</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">ts</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">node </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">index</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.ts</span></span></code></pre></div>`,22)]))}const F=a(n,[["render",l]]);export{c as __pageData,F as default};
