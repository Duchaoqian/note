import{_ as i,c as a,o as n,ag as h}from"./chunks/framework.CgAj5nG9.js";const d=JSON.parse('{"title":"class 类","description":"","frontmatter":{},"headers":[],"relativePath":"note/TypeScript/03-ts类(class).md","filePath":"note/TypeScript/03-ts类(class).md","lastUpdated":1751877942000}'),l={name:"note/TypeScript/03-ts类(class).md"};function k(p,s,t,F,e,B){return n(),a("div",null,s[0]||(s[0]=[h(`<h1 id="class-类" tabindex="-1">class 类 <a class="header-anchor" href="#class-类" aria-label="Permalink to &quot;class 类&quot;">​</a></h1><p>TypeScript 是面向对象的 JavaScript。<br> 类描述了所创建的对象共同的属性和方法。<br> TypeScript 支持面向对象的所有特性，比如 类、接口等。<br></p><p>定义类的关键字为 class，后面紧跟类名，类可以包含以下几个模块（类的数据成员）：</p><ul><li>字段 − 字段是类里面声明的变量。字段表示对象的有关数据。</li><li>构造函数 − 类实例化时调用，可以为类的对象分配内存。</li><li>方法 − 方法为对象要执行的操作。</li></ul><h2 id="创建一个类" tabindex="-1">创建一个类 <a class="header-anchor" href="#创建一个类" aria-label="Permalink to &quot;创建一个类&quot;">​</a></h2><p>示例</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>编译后</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> /** </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@class</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> */</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> () {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person() {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}());</span></span></code></pre></div><h2 id="创建类的数据成员" tabindex="-1">创建类的数据成员 <a class="header-anchor" href="#创建类的数据成员" aria-label="Permalink to &quot;创建类的数据成员&quot;">​</a></h2><p>类的数据成员：成员属性， 成员方法，构造器，get, set</p><p>示例：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">  // 声明 成员属性</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  _username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;zs&#39;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 20</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  sex</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">  // 构造函数</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">() {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">    // 给成员属性赋值</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">._username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;hh&#39;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 123</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.sex </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">    // 未经声明的成员属性 则会出现error</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.hobby </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> [] </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// error</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">  // 声明成员方法</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  say() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;hello&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">  // get</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  get</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> username() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">._username</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">  // set</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  set</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> username(val) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">._username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> val</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 实例化</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> zs </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// hh</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;ls&#39;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">._username) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// ls</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.sex) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 1</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.hobby) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// []</span></span></code></pre></div><p>编译后：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> /** </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@class</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> */</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">    // 构造函数</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person() {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">        // 声明 成员属性</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">._username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;zs&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 20</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">        // 给成员属性赋值</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">._username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;hh&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 123</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.sex </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 1</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">        // 未经声明的成员属性 则会出现error</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.hobby </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> []; </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// error</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    }</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">    // 声明成员方法</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    Person</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">prototype</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.say </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> () {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;hello&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    };</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    Object</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.defineProperty(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">Person</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">prototype</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &quot;username&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">        // get</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        get</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> () {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">._username;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">        // set</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        set</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (val) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">            this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">._username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> val;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        enumerable</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        configurable</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    });</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}());</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 实例化</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> zs </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person();</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username); </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// hh</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;ls&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">._username); </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// ls</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.sex); </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 1</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.hobby); </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// []</span></span></code></pre></div><h2 id="私有字段" tabindex="-1">私有字段(#) <a class="header-anchor" href="#私有字段" aria-label="Permalink to &quot;私有字段(#)&quot;">​</a></h2><p>在 TS 3.8版本便开始支持ECMACMAScript的私有字段。 需要注意的是私有字段与常规字段不同，主要的区别是：</p><ul><li>私有字段以 # 字符开头，也叫私有名称；</li><li>每个私有字段名称都唯一地限定于其包含的类；</li><li>不能在私有字段上使用 TypeScript 可访问性修饰符（如 public 或 private）；</li><li>私有字段不能在包含的类之外访问，甚至不能被检测到。</li></ul><p>示例：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  #nickname</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;大帅哥&#39;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.#nickname</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  say() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">\`</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">\${</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.#nickname</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> say: hello\`</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  setNickname() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.#nickname </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;大美女&#39;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> zs </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 大帅哥</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.say() </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">//  大帅哥 say: hello</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.setNickname()</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 大帅哥</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.say() </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 大美女 say: hello</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.#nickname) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// error</span></span></code></pre></div><h2 id="只读属性-readonly" tabindex="-1">只读属性（readonly） <a class="header-anchor" href="#只读属性-readonly" aria-label="Permalink to &quot;只读属性（readonly）&quot;">​</a></h2><p>只读属性：用 readonly 修饰，只能在构造函数中初始化。并且在TS中，只允许将interface、type、class上的属性标识为readonly</p><ul><li>readonly实际上只是在编译阶段进行代码检查</li><li>被radonly修饰的词只能在 constructor阶段修改，其他时刻不允许修改</li></ul><p>示例：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  readonly</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> // 只读属性</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;zs&#39;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 123</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  setName(name</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> name </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">//  error</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> age</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span></code></pre></div><p>编译后：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> /** </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@class</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> */</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> () {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;zs&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 123</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    }</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    Person</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">prototype</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.setName </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> (name</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> age) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> name; </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">//  error</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> age;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    };</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}());</span></span></code></pre></div><h2 id="继承-extends" tabindex="-1">继承（extends） <a class="header-anchor" href="#继承-extends" aria-label="Permalink to &quot;继承（extends）&quot;">​</a></h2><p>类继承后，子类可以对父类的方法重新定义，这个过程称之为方法的重写。<br> 其中 super 关键字是对父类的直接引用，该关键字可以引用父类的属性和方法。</p><p>示例：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 父类</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> // 只读属性</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;zs&#39;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 123</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  setName(name</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> name </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">//  error</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> age</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 子类</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Man </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">extends</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  sex</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;男&#39;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">(){</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    super()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> zs </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Man()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.sex) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 男</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// zs</span></span></code></pre></div><h2 id="abstract" tabindex="-1">abstract <a class="header-anchor" href="#abstract" aria-label="Permalink to &quot;abstract&quot;">​</a></h2><p>abstract: 用abstract关键字声明的类叫做抽象类，声明的方法叫做抽象方法</p><ul><li>抽象类：指不能被实例化，因为它里面包含一个或多个抽象方法。</li><li>抽象方法：是指不包含具体实现的方法；</li></ul><blockquote><p><strong>抽象类是不能直接实例化，只能实例化实现了所有抽象方法的子类</strong><strong>抽象方法只能书写在抽象类中</strong></p></blockquote><p>示例：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">abstract</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;"> // 只读属性</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">(username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> username</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> age</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  abstract</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> say()</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> void</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Man </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">extends</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  sex</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;男&#39;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">(username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    super(username</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> age)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  say()</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;hello&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> ls </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person() </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// error</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> zs </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Man() </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// ok</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.say() </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// hello</span></span></code></pre></div><h2 id="修饰符" tabindex="-1">修饰符 <a class="header-anchor" href="#修饰符" aria-label="Permalink to &quot;修饰符&quot;">​</a></h2><p>修饰符对应数据在不同场景下是否可用表</p><table tabindex="0"><thead><tr><th>关键字</th><th>类本身</th><th>类的方法</th><th>类的实例</th><th>子类</th><th>子类方法</th><th>子类的实例</th></tr></thead><tbody><tr><td><a href="#static">static</a></td><td>+</td><td>-</td><td>-</td><td>+</td><td>-</td><td>-</td></tr><tr><td>public</td><td>-</td><td>+</td><td>+</td><td>-</td><td>+</td><td>+</td></tr><tr><td>private</td><td>-</td><td>+</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td>protected</td><td>-</td><td>+</td><td>-</td><td>-</td><td>+</td><td>-</td></tr></tbody></table><h3 id="static" tabindex="-1">static <a class="header-anchor" href="#static" aria-label="Permalink to &quot;static&quot;">​</a></h3><p>static： 类（class）通过 static 关键字定义静态方法、静态属性。不能在类的实例上调用静态方法、属性，而应该通过类本身调用。这些通常是实用程序方法，例如创建或克隆对象的功能。</p><p>示例：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  static</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> sex </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;男&#39;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  static</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> say() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">&#39;hello&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> zs </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">Person</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.sex) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// 男</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.sex) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// undefined</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">Person</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.say()) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// hello</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">zs</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.say()) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// error</span></span></code></pre></div><h3 id="public" tabindex="-1">public <a class="header-anchor" href="#public" aria-label="Permalink to &quot;public&quot;">​</a></h3><p>对象的成员都是public成员。任何对象都可以访问，修改，删除这些成员或添加新成员。主要有两种方式来在一个新对象里放置成员</p><p>示例：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;zs&#39;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 123</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> say()</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;say: hello&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> p </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> p</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// zs 123</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.say() </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// zs say: hello</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">Person</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.say() </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// error</span></span></code></pre></div><h3 id="private" tabindex="-1">private <a class="header-anchor" href="#private" aria-label="Permalink to &quot;private&quot;">​</a></h3><p>private 私密属性 只能在类中使用</p><p>示例：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;123&#39;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  uname</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;zs&#39;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.uname </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 123</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> hello()</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;say: hello&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  say() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.hello()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Man </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">extends</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  getUser() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// error</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> p </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person()</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// error</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.hello() </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// error</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.say() </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// zs say:hello</span></span></code></pre></div><h3 id="protected" tabindex="-1">protected <a class="header-anchor" href="#protected" aria-label="Permalink to &quot;protected&quot;">​</a></h3><p>protected 关键字修饰的数据智能在类中，子类中调用</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  protected</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> username</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;123&#39;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  uname</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;zs&#39;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.uname </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#F8F8F8;"> 123</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  protected</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> hello()</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#BBBBBB;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> &#39;say: hello&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  say() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.hello()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Man </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">extends</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  getUser() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// ok</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.age)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> p </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Person()</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.log(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.username) </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// error</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.hello() </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// error</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.say() </span><span style="--shiki-light:#6B737C;--shiki-dark:#6B737C;">// zs say:hello</span></span></code></pre></div>`,55)]))}const g=i(l,[["render",k]]);export{d as __pageData,g as default};
